// <auto-generated />
using System;
using AngularCoreApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AngularCoreApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191016090210_AddPhoto")]
    partial class AddPhoto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularCoreApp.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Feature1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Feature2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Feature3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Feature4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Feature5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Feature6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Feature7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Feature8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Feature9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Feature10"
                        });
                });

            modelBuilder.Entity("AngularCoreApp.Models.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AutoBrand1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AutoBrand2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AutoBrand3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "AutoBrand4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "AutoBrand5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "AutoBrand6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "AutoBrand7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "AutoBrand8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "AutoBrand9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "AutoBrand10"
                        });
                });

            modelBuilder.Entity("AngularCoreApp.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MakeId = 5,
                            Name = "AutoModel1"
                        },
                        new
                        {
                            Id = 2,
                            MakeId = 7,
                            Name = "AutoModel2"
                        },
                        new
                        {
                            Id = 3,
                            MakeId = 9,
                            Name = "AutoModel3"
                        },
                        new
                        {
                            Id = 4,
                            MakeId = 5,
                            Name = "AutoModel4"
                        },
                        new
                        {
                            Id = 5,
                            MakeId = 7,
                            Name = "AutoModel5"
                        },
                        new
                        {
                            Id = 6,
                            MakeId = 7,
                            Name = "AutoModel6"
                        },
                        new
                        {
                            Id = 7,
                            MakeId = 10,
                            Name = "AutoModel7"
                        },
                        new
                        {
                            Id = 8,
                            MakeId = 7,
                            Name = "AutoModel8"
                        },
                        new
                        {
                            Id = 9,
                            MakeId = 10,
                            Name = "AutoModel9"
                        },
                        new
                        {
                            Id = 10,
                            MakeId = 9,
                            Name = "AutoModel10"
                        },
                        new
                        {
                            Id = 11,
                            MakeId = 9,
                            Name = "AutoModel11"
                        },
                        new
                        {
                            Id = 12,
                            MakeId = 1,
                            Name = "AutoModel12"
                        },
                        new
                        {
                            Id = 13,
                            MakeId = 9,
                            Name = "AutoModel13"
                        },
                        new
                        {
                            Id = 14,
                            MakeId = 6,
                            Name = "AutoModel14"
                        },
                        new
                        {
                            Id = 15,
                            MakeId = 2,
                            Name = "AutoModel15"
                        },
                        new
                        {
                            Id = 16,
                            MakeId = 8,
                            Name = "AutoModel16"
                        },
                        new
                        {
                            Id = 17,
                            MakeId = 8,
                            Name = "AutoModel17"
                        },
                        new
                        {
                            Id = 18,
                            MakeId = 1,
                            Name = "AutoModel18"
                        },
                        new
                        {
                            Id = 19,
                            MakeId = 7,
                            Name = "AutoModel19"
                        },
                        new
                        {
                            Id = 20,
                            MakeId = 6,
                            Name = "AutoModel20"
                        },
                        new
                        {
                            Id = 21,
                            MakeId = 4,
                            Name = "AutoModel21"
                        },
                        new
                        {
                            Id = 22,
                            MakeId = 10,
                            Name = "AutoModel22"
                        },
                        new
                        {
                            Id = 23,
                            MakeId = 6,
                            Name = "AutoModel23"
                        },
                        new
                        {
                            Id = 24,
                            MakeId = 5,
                            Name = "AutoModel24"
                        },
                        new
                        {
                            Id = 25,
                            MakeId = 8,
                            Name = "AutoModel25"
                        },
                        new
                        {
                            Id = 26,
                            MakeId = 6,
                            Name = "AutoModel26"
                        },
                        new
                        {
                            Id = 27,
                            MakeId = 6,
                            Name = "AutoModel27"
                        },
                        new
                        {
                            Id = 28,
                            MakeId = 10,
                            Name = "AutoModel28"
                        },
                        new
                        {
                            Id = 29,
                            MakeId = 4,
                            Name = "AutoModel29"
                        },
                        new
                        {
                            Id = 30,
                            MakeId = 10,
                            Name = "AutoModel30"
                        });
                });

            modelBuilder.Entity("AngularCoreApp.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("AngularCoreApp.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("AngularCoreApp.Models.VehicleFeature", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("VehiclesFeatures");
                });

            modelBuilder.Entity("AngularCoreApp.Models.Model", b =>
                {
                    b.HasOne("AngularCoreApp.Models.Make", "Make")
                        .WithMany("Models")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AngularCoreApp.Models.Photo", b =>
                {
                    b.HasOne("AngularCoreApp.Models.Vehicle", null)
                        .WithMany("Photos")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("AngularCoreApp.Models.Vehicle", b =>
                {
                    b.HasOne("AngularCoreApp.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AngularCoreApp.Models.VehicleFeature", b =>
                {
                    b.HasOne("AngularCoreApp.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularCoreApp.Models.Vehicle", "Vehicle")
                        .WithMany("Features")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
